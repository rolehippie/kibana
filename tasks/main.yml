---
- name: Remove legacy key
  ansible.builtin.apt_key:
    id: 46095ACC8548582C1A2699A9D27D666CD88E42B4
    state: absent
  tags:
    - kibana

- name: Remove legacy repo
  ansible.builtin.apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/{{ kibana_major_version }}.x/apt stable main"
    filename: elastic
    update_cache: False
    state: absent
  tags:
    - kibana

- name: Download repo key
  ansible.builtin.shell:
    cmd: "curl -sSL 'https://artifacts.elastic.co/GPG-KEY-elasticsearch' | gpg --dearmor --output {{ kibana_keyring }}"
    creates: "{{ kibana_keyring }}"
  tags:
    - kibana

- name: Add apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by={{ kibana_keyring }}] https://artifacts.elastic.co/packages/{{ kibana_major_version }}.x/apt stable main"
    filename: elastic
    update_cache: True
    state: present
  tags:
    - kibana

- name: Create required group
  ansible.builtin.group:
    name: "{{ kibana_group }}"
    system: True
    state: present
  tags:
    - kibana

- name: Create required user
  ansible.builtin.user:
    name: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    password: "!"
    ansible.builtin.shell: /usr/sbin/nologin
    home: /var/lib/kibana
    create_home: False
    system: True
    state: present
  tags:
    - kibana

- name: Pin package version
  ansible.builtin.copy:
    content: |
      Explantion: Pin added by kibana role
      Package: kibana
      Pin: version {{ kibana_server_version }}*
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/kibana
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - kibana

- name: Install required packages
  loop:
    - "kibana={{ kibana_server_version }}*"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - kibana

- name: Write kibana config
  notify:
    - Restart kibana
  ansible.builtin.template:
    src: config.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: "{{ kibana_group }}"
    mode: u=rw,g=rw,o=
  tags:
    - kibana

- name: Write default config
  notify:
    - Restart kibana
  ansible.builtin.template:
    src: default.j2
    dest: /etc/default/kibana
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - kibana

- name: Start kibana service
  ansible.builtin.systemd:
    name: kibana
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - kibana

...
